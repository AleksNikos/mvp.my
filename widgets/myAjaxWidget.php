<?php
/**
 * Created by PhpStorm.
 * User: Vitaly
 * Date: 03.05.2019
 * Time: 8:40
 */

namespace app\widgets;


use Codeception\Extension;
use function ob_get_clean;
use function ob_start;
use Yii;
use yii\base\ExitException;
use yii\base\Widget;
use yii\db\Exception;
use yii\web\NotFoundHttpException;

class myAjaxWidget extends Widget
{
    /*Входные параметры*/
    public $link; // место куда будет отправлен ajax
    public $formSelector; //селектор формы
    public $submitSelector; //селектор при клике на который форма отправляется
    public $formClean; //очищает форму после получения ответа
    public $afterMethod; //метод который необходимо вызвать после ajax
    public $successMethod = "alert(response['success']);"; //стандартный метод.

    /*Изменяемые параметры*/
    public $formID;//если нет formSelector

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        ob_start();
    }

    public function run()
    {
        $content = ob_get_clean();

        if(!$this->formSelector){ //если селектора формы нет
            $this->formID = Yii::$app->security->generateRandomString();
            $content =  "<div class='".$this->formID."'>".$content."</div>";
        }

        if(!$this->link){ //Если не казаны ссылка ajax то форма отсылается на текущий обработчик.

            $this->link = "/".Yii::$app->controller->id."/".Yii::$app->controller->action->id;//Указывается абсолютный путь
        }



        return $this->addJsScript($content);
    }



    public function addJsScript($content){


        $blockAjax = $this->getBlockAjax();

        $script = "
        <script>
        ".$this->printErrors()."
        document.addEventListener('DOMContentLoaded', function(){ //загружаем скрипт после прогрузки страницы
              
              /*обработка клика*/
             
              
              if($('".$this->formSelector." submit').length>0){
                       
                  $('".$this->formSelector."').on('click', 'submit', function(event) {
                            event.preventDefault();
                            //код обработки формы
                            ".$this->getBlockAjax()."
                            ".$this->afterMethod."
                    
                  });
              }else if($('".$this->formSelector." button:last-child').length>0){
                  $('".$this->formSelector."').on('click', 'button:last-child', function(event) {
                            event.preventDefault();
                        //Код обработки формы
                        ".$this->getBlockAjax()."
                        ".$this->afterMethod."

                  });
              }else{
                  //выбросить исключение. если нет указателя на то на что кликают
                  $('".$this->formSelector."').on('click', '".$this->submitSelector."', function(event) {
                        //Код обработки формы
                        
                        ".$this->getBlockAjax()."
                        ".$this->afterMethod."
                  });
              }
              
              
           
        });
       
        </script>
        ";


        return $content.$script;

    }

    /*
     * Передает в скрипт блок AJAX
     *
     * @param string $data - сериализованные данные формы.
     * */
    public function getBlockAjax(){
        if(!$this->link){
            throw new Exception("Ajax link is not be empty");
        }
        return "
            fid ='s';
            jQuery.ajaxSetup({async:false}); //иначе не возможен вывод ошибок
            $.ajax({
            url: '".$this->link."',
            type: 'POST',
            data: ".$this->generateDataString().",
            success: function(response){
                ".$this->generateResponse()."

            },
            error: function(er){
            eror = er;
                if(er.status == 500){
                   if(er.hasOwnProperty(\"responseJSON\")){
                       if(er.responseJSON.hasOwnProperty(\"message\")){
                            console.log(er.responseJSON.message); //Это Stripe
                       }
                   }else{
                       console.log(er.responseText)
                   }
                }
            }
        });
        ";
    }

    /*
     * Парсит форму
     *
     * @return string.
     * выход в js тоже строка.
     * */
    public function generateDataString() {
        return "$('".$this->formSelector."').serialize()";
    }

    /*
     * Генерирует ответ от ajax
     *
     * response['error'] - ошибки которые нужно передать юзеру формат: response['error']= "Не правильно введены данные";
     * */
    public function generateResponse(){
        return "
        ajaxResponse = response;
            if(response){
                if(response.error){ //ошибки бизнес логики; Выводится #model->errors; данный код можно не менять из проекта в проект
                    printErrors(response.error);
                }
                
                if(response.console){ // ошибки php
                    console.log(response.console);
                }
                
                if(response['success'] && response['success'].length>0){ //успешное выполнение.
                    ".$this->successMethod."
                     //можно написать скрипт если действие успешно выполненно. (функцию скрипта передать в переменную php)
                }
                if(typeof response == 'string'){
                    console.log(response);
                }
            
            }else{
                console.log('Response is null');
            }
        ";
    }

    public function printErrors() {
        return "
            function printErrors (errosObj) {
                for(er in errosObj){
                    var error = errosObj[er];
                    console.log(error[0]);
                }
            }
        ";
    }

}