function year(e,t){var a,o,i;for(o=document.getElementsByClassName("tabcontent"),a=0;a<o.length;a++)o[a].style.display="none";for(i=document.getElementsByClassName("tablinks"),a=0;a<i.length;a++)i[a].className=i[a].className.replace(" active","");document.getElementById(t).style.display="block",e.currentTarget.className+=" active"}function keysAccordion(){if($(window).width()<560){var e,t=document.getElementsByClassName("keys");for(e=0;e<t.length;e++)t[e].addEventListener("click",function(e){this.classList.toggle("active");for(var t=this.nextElementSibling;t&&t.classList.contains("hidden-buttons-keys");)t.classList.toggle("d-none"),t=t.nextElementSibling})}}function topMenu(){var e=document.getElementById("menu");"auto"===e.style.height?e.style.height="0":e.style.height="auto"}new Chart(document.getElementById("bar-chart-horizontal"),{type:"horizontalBar",data:{labels:["Foo"],datasets:[{label:"bad",data:[25],backgroundColor:"#9eaeff"},{label:"better",data:[10],backgroundColor:"rgba(255, 255, 255, 0.3)"}]},options:{plugins:{stacked100:{enable:!0}},legend:{display:!1},scales:{xAxes:[{display:!1}],yAxes:[{display:!1}]}}});var time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],ctx=document.getElementById("myChart").getContext("2d"),gradientFd=ctx.createLinearGradient(0,0,0,250);gradientFd.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr=ctx.createLinearGradient(0,0,0,250);gradientEr.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr.addColorStop(1,"rgba(18, 125, 176, 0.9)");var myChart=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:fd,lineTension:0},{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0}]},options:{responsive:!0,tooltips:{mode:"index",backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!0,intersect:!1},hover:{mode:"nearest",intersect:!0},maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20px",usePointStyle:!0}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)"}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4"}}]}}}),ctx1=$("#doughnut-chartcanvas-1"),data1={labels:["Face detector","Emotion recognition"],datasets:[{data:[85,15],backgroundColor:["#54f0ff","#855df8"],borderColor:["#54f0ff","#855df8"]}]},options={responsive:!0,title:{display:!1},cutoutPercentage:98,legend:{display:!1}},chart1=new Chart(ctx1,{type:"doughnut",data:data1,options:options}),mini_time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],mini_fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],mini_er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],btx=document.getElementById("myChartMini").getContext("2d"),gradientFd_mini=btx.createLinearGradient(0,0,0,250);gradientFd_mini.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd_mini.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr_mini=btx.createLinearGradient(0,0,0,250);gradientEr_mini.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr_mini.addColorStop(1,"rgba(18, 125, 176, 0.9)");var myChart=new Chart(btx,{type:"line",data:{labels:mini_time,datasets:[{label:"Fd",borderColor:gradientFd_mini,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd_mini,borderWidth:1,data:mini_fd,lineTension:0},{label:"Er",borderColor:gradientEr_mini,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr_mini,borderWidth:1,data:mini_er,lineTension:0}]},options:{responsive:!0,maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20"}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14,display:!1},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)",display:!1}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4",display:!1}}]}}});$('[data-fancybox="gallery"]').fancybox({});var acc=document.getElementsByClassName("accordion"),i;for(i=0;i<acc.length;i++)acc[i].addEventListener("click",function(){this.classList.toggle("active");var e=this.nextElementSibling;"table-row"===e.style.display?e.style.display="none":e.style.display="table-row"});keysAccordion(),$(window).resize(function(){keysAccordion()}),$(window).scroll(function(){var e=$(this).scrollTop();e>90?$(".mobile-nav").addClass("active"):$(".mobile-nav").removeClass("active")}),document.querySelector(".menu").addEventListener("click",topMenu),document.querySelector("#menuDesctop").addEventListener("click",topMenu);var time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],ctx=document.getElementById("mobile-chart").getContext("2d"),gradientFd=ctx.createLinearGradient(0,0,0,250);gradientFd.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr=ctx.createLinearGradient(0,0,0,250);gradientEr.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr.addColorStop(1,"rgba(18, 125, 176, 0.9)");var myChart=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:fd,lineTension:0},{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0}]},options:{responsive:!0,tooltips:{mode:"index",intersect:!1,backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!0},maintainAspectRatio:!1,legend:{display:!1},scales:{yAxes:[{ticks:{display:!1,beginAtZero:!0},gridLines:{display:!1,tickMarkLength:0}}],xAxes:[{gridLines:{display:!1,tickMarkLength:0},ticks:{display:!1,beginAtZero:!0}}]}}}),time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],ctx=document.getElementById("graph-mobile").getContext("2d"),gradientFd=ctx.createLinearGradient(0,0,0,250);gradientFd.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr=ctx.createLinearGradient(0,0,0,250);gradientEr.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr.addColorStop(1,"rgba(18, 125, 176, 0.9)");var graph_mobile=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBorderColor:"transparent",fill:!1,backgroundColor:gradientFd,borderWidth:3,data:fd,lineTension:0},{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBorderColor:"transparent",fill:!1,backgroundColor:gradientEr,borderWidth:3,data:er,lineTension:0}]},options:{responsive:!0,tooltips:{mode:"index",intersect:!1,backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!0},hover:{mode:"nearest",intersect:!0},maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20px",usePointStyle:!0}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14,display:!1,beginAtZero:!0},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)"}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4",beginAtZero:!0}}]}}});$("#mobile-dashboard-detail").click(function(){$(".dashboard-info .main-info .table-wrapper:nth-child(3)").css("display","block"),$(".dashboard-info .main-info .table-wrapper:nth-child(2)").css("display","none")}),$(".change_pass-btn").click(function(){$(".password").toggleClass("d-block")}),$(".dashboard-info .dashboard_left-bar .nav .list_item:nth-child(1)").hasClass("active")&&$(".dashboard-info .dashboard_left-bar").css("background","url(../img/method-draw-image.svg)no-repeat"),$(function(){$(".hide-show").show(),$(".hide-show span").addClass("show"),$(".hide-show span").click(function(){$(this).hasClass("show")?($(this).text("Hide"),$(this).parent().siblings(".password").attr("type","text"),$(this).removeClass("show")):($(this).text("Show"),$(this).parent().siblings(".password").attr("type","password"),$(this).addClass("show"))}),$(".change > a").on("click",function(){$(".hide-show span").text("Show").addClass("show"),$(".hide-show").parent().find(".password").attr("type","password")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsieWVhciIsImV2dCIsImkiLCJ0YWJjb250ZW50IiwidGFibGlua3MiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJsZW5ndGgiLCJzdHlsZSIsImRpc3BsYXkiLCJjbGFzc05hbWUiLCJyZXBsYWNlIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdXJyZW50VGFyZ2V0Iiwia2V5c0FjY29yZGlvbiIsIiQiLCJ3aW5kb3ciLCJ3aWR0aCIsImoiLCJrZXlBY2MiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ0aGlzIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicGFuZWwiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJjb250YWlucyIsInRvcE1lbnUiLCJ4IiwiaGVpZ2h0IiwiQ2hhcnQiLCJ0eXBlIiwiZGF0YSIsImxhYmVscyIsImRhdGFzZXRzIiwibGFiZWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCJvcHRpb25zIiwicGx1Z2lucyIsInN0YWNrZWQxMDAiLCJlbmFibGUiLCJsZWdlbmQiLCJzY2FsZXMiLCJ4QXhlcyIsInlBeGVzIiwidGltZSIsImZkIiwiZXIiLCJjdHgiLCJnZXRDb250ZXh0IiwiZ3JhZGllbnRGZCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwiYWRkQ29sb3JTdG9wIiwiZ3JhZGllbnRFciIsIm15Q2hhcnQiLCJib3JkZXJDb2xvciIsInBvaW50UmFkaXVzIiwicG9pbnRCYWNrZ3JvdW5kQ29sb3IiLCJwb2ludEJvcmRlckNvbG9yIiwiZmlsbCIsImJvcmRlcldpZHRoIiwibGluZVRlbnNpb24iLCJyZXNwb25zaXZlIiwidG9vbHRpcHMiLCJtb2RlIiwidGl0bGVGb250RmFtaWx5IiwicG9zaXRpb24iLCJib2R5Rm9udENvbG9yIiwiYm9keUZvbnRTaXplIiwiYm9keVNwYWNpbmciLCJ4UGFkZGluZyIsInlQYWRkaW5nIiwiY29ybmVyUmFkaXVzIiwibXVsdGlLZXlCYWNrZ3JvdW5kIiwiZW5hYmxlZCIsImludGVyc2VjdCIsImhvdmVyIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsImZvbnRDb2xvciIsImZvbnRTaXplIiwibGluZUhlaWdodCIsInVzZVBvaW50U3R5bGUiLCJ0aWNrcyIsIm1heFRpY2tzTGltaXQiLCJwYWRkaW5nIiwiZ3JpZExpbmVzIiwiZHJhd1RpY2tzIiwibGluZVdpZHRoIiwiY29sb3IiLCJ6ZXJvTGluZUNvbG9yIiwiY3R4MSIsImRhdGExIiwidGl0bGUiLCJjdXRvdXRQZXJjZW50YWdlIiwiY2hhcnQxIiwibWluaV90aW1lIiwibWluaV9mZCIsIm1pbmlfZXIiLCJidHgiLCJncmFkaWVudEZkX21pbmkiLCJncmFkaWVudEVyX21pbmkiLCJmYW5jeWJveCIsImFjYyIsInJlc2l6ZSIsInNjcm9sbCIsIndTY3JvbGwiLCJzY3JvbGxUb3AiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicXVlcnlTZWxlY3RvciIsImJlZ2luQXRaZXJvIiwidGlja01hcmtMZW5ndGgiLCJncmFwaF9tb2JpbGUiLCJjbGljayIsImNzcyIsInRvZ2dsZUNsYXNzIiwiaGFzQ2xhc3MiLCJzaG93IiwidGV4dCIsInBhcmVudCIsInNpYmxpbmdzIiwiYXR0ciIsIm9uIiwiZmluZCJdLCJtYXBwaW5ncyI6IkFBNlFJLFFBQVNBLE1BQUtDLEVBQUtELEdBQ2pCLEdBQUlFLEdBQUdDLEVBQVlDLENBRW5CLEtBREFELEVBQWFFLFNBQVNDLHVCQUF1QixjQUN4Q0osRUFBSSxFQUFHQSxFQUFJQyxFQUFXSSxPQUFRTCxJQUNqQ0MsRUFBV0QsR0FBR00sTUFBTUMsUUFBVSxNQUdoQyxLQURBTCxFQUFXQyxTQUFTQyx1QkFBdUIsWUFDdENKLEVBQUksRUFBR0EsRUFBSUUsRUFBU0csT0FBUUwsSUFDL0JFLEVBQVNGLEdBQUdRLFVBQVlOLEVBQVNGLEdBQUdRLFVBQVVDLFFBQVEsVUFBVyxHQUVuRU4sVUFBU08sZUFBZVosR0FBTVEsTUFBTUMsUUFBVSxRQUM5Q1IsRUFBSVksY0FBY0gsV0FBYSxVQXlCakMsUUFB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USxFQUNSc0csYUFBYSxHQUVqQnpCLFdBQ0lDLFdBQVcsRUFDWEMsVUFBVyxFQUNYQyxNQUFPLDhCQUlmN0MsUUFDSTBDLFdBQ0lJLGNBQWUsT0FDZmpGLFNBQVMsR0FFYjBFLE9BQ0lFLFFBQVMsRUFDVE4sVUFBVyxVQUNYZ0MsYUFBYSxRQVFqQ2hHLEdBQUUsNEJBQTRCbUcsTUFBTSxXQUNoQ25HLEVBQUUsMERBQTBEb0csSUFBSSxVQUFVLFNBQzFFcEcsRUFBRSwwREFBMERvRyxJQUFJLFVBQVUsVUFJOUVwRyxFQUFFLG9CQUFvQm1HLE1BQU0sV0FDMUJuRyxFQUFFLGFBQWFxRyxZQUFZLGFBSXpCckcsRUFBRSxvRUFBb0VzRyxTQUFTLFdBQ2pGdEcsRUFBRSx1Q0FBdUNvRyxJQUFJLGFBQWEsOENBSTVEcEcsRUFBRSxXQUNBQSxFQUFFLGNBQWN1RyxPQUNoQnZHLEVBQUUsbUJBQW1CNkYsU0FBUyxRQUU5QjdGLEVBQUUsbUJBQW1CbUcsTUFBTSxXQUNyQm5HLEVBQUVPLE1BQU0rRixTQUFTLFNBQ25CdEcsRUFBRU8sTUFBTWlHLEtBQUssUUFDYnhHLEVBQUVPLE1BQU1rRyxTQUFTQyxTQUFTLGFBQWFDLEtBQUssT0FBTyxRQUNuRDNHLEVBQUVPLE1BQU11RixZQUFZLFVBRW5COUYsRUFBRU8sTUFBTWlHLEtBQUssUUFDYnhHLEVBQUVPLE1BQU1rRyxTQUFTQyxTQUFTLGFBQWFDLEtBQUssT0FBTyxZQUNuRDNHLEVBQUVPLE1BQU1zRixTQUFTLFdBSXRCN0YsRUFBRSxlQUFlNEcsR0FBRyxRQUFTLFdBQzNCNUcsRUFBRSxtQkFBbUJ3RyxLQUFLLFFBQVFYLFNBQVMsUUFDM0M3RixFQUFFLGNBQWN5RyxTQUFTSSxLQUFLLGFBQWFGLEtBQUssT0FBTyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSG9yaXpvbnRhbGwgYmFyIDEwMCVcclxuICAgIG5ldyBDaGFydChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhci1jaGFydC1ob3Jpem9udGFsXCIpLCB7XHJcbiAgICAgIHR5cGU6IFwiaG9yaXpvbnRhbEJhclwiLFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgbGFiZWxzOiBbXCJGb29cIl0sXHJcbiAgICAgICAgZGF0YXNldHM6IFtcclxuICAgICAgICAgIHsgbGFiZWw6IFwiYmFkXCIsIGRhdGE6IFsyNV0sIGJhY2tncm91bmRDb2xvcjogXCIjOWVhZWZmXCIgfSxcclxuICAgICAgICAgIHsgbGFiZWw6IFwiYmV0dGVyXCIsIGRhdGE6IFsxMF0sIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMylcIiB9XHJcbiAgICAgICAgXVxyXG4gICAgICB9LFxyXG4gICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgc3RhY2tlZDEwMDogeyBlbmFibGU6IHRydWUgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbGVnZW5kOiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2NhbGVzOiB7XHJcbiAgICAgICAgICAgIHhBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHlBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuLy8gQ2hhcnQgbGluZSBiaWdcclxuICAgIHZhciB0aW1lID0gWydNYXIgNCcsNiw4LDEwLDEyLDE0LDE2LDE4LDIwLDIyLDI0LDI2LDI4LDMwLCdBcHIgMScsMyw1XTtcclxuXHJcbiAgICB2YXIgZmQgPSBbNSw3LDEsMjQsMTMsMjgsNDAsMTQsMzgsMTEsMjIsMTYsMzQsMTksMSwxNCwzOCwxMSwyMl07XHJcbiAgICB2YXIgZXIgPSBbMzgsMTEsMjIsMTYsMzQsMTksMSwxNCw1LDcsMSwyNCwxMywyOCw0MCwxNCw1LDcsMV07XHJcblxyXG4gICAgdmFyIGN0eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUNoYXJ0JykuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuICAgIHZhciBncmFkaWVudEZkID0gY3R4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDI1MCk7XHJcbiAgICBncmFkaWVudEZkLmFkZENvbG9yU3RvcCgwLCAncmdiYSgxMzMsIDkzLCAyNDgsIDAuOSknKTtcclxuICAgIGdyYWRpZW50RmQuYWRkQ29sb3JTdG9wKDEsICdyZ2JhKDYwLCA0NSwgMTY5LCAwLjkpJyk7XHJcblxyXG4gICAgdmFyIGdyYWRpZW50RXIgPSBjdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgMjUwKTtcclxuICAgIGdyYWRpZW50RXIuYWRkQ29sb3JTdG9wKDAsICdyZ2JhKDg0LCAyNDAsIDI1NSwgMC45KScpO1xyXG4gICAgZ3JhZGllbnRFci5hZGRDb2xvclN0b3AoMSwgJ3JnYmEoMTgsIDEyNSwgMTc2LCAwLjkpJyk7XHJcblxyXG4gICAgdmFyIG15Q2hhcnQgPSBuZXcgQ2hhcnQoY3R4LCB7XHJcbiAgICAgICAgdHlwZTogJ2xpbmUnLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgbGFiZWxzOiB0aW1lLFxyXG4gICAgICAgICAgICBkYXRhc2V0czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJGYWNlIGRldGVjdG9yXCIsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogZ3JhZGllbnRGZCxcclxuICAgICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogZ3JhZGllbnRGZCxcclxuICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZmQsXHJcbiAgICAgICAgICAgICAgICBsaW5lVGVuc2lvbjogMFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJFbW90aW9uIHJlY29nbml0aW9uXCIsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogZ3JhZGllbnRFcixcclxuICAgICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogZ3JhZGllbnRFcixcclxuICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZXIsXHJcbiAgICAgICAgICAgICAgICBsaW5lVGVuc2lvbjogMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgdG9vbHRpcHM6IHtcclxuICAgICAgICAgICAgICAgIG1vZGU6ICdpbmRleCcsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDMwLCAzNywgNzMsIDAuNSknLFxyXG4gICAgICAgICAgICAgICAgdGl0bGVGb250RmFtaWx5OiAnaW5oZXJpdCcsXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiduZWFyZXN0JyxcclxuICAgICAgICAgICAgICAgIGJvZHlGb250Q29sb3I6ICcjYTliMmUxJyxcclxuICAgICAgICAgICAgICAgIGJvZHlGb250U2l6ZToxNCxcclxuICAgICAgICAgICAgICAgIGJvZHlTcGFjaW5nOjMwLFxyXG4gICAgICAgICAgICAgICAgeFBhZGRpbmc6MjAsXHJcbiAgICAgICAgICAgICAgICB5UGFkZGluZzoyNSxcclxuICAgICAgICAgICAgICAgIGNvcm5lclJhZGl1czowLFxyXG4gICAgICAgICAgICAgICAgbXVsdGlLZXlCYWNrZ3JvdW5kOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGludGVyc2VjdDpmYWxzZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBob3Zlcjoge1xyXG4gICAgICAgICAgICAgICAgbW9kZTogJ25lYXJlc3QnLFxyXG4gICAgICAgICAgICAgICAgaW50ZXJzZWN0OiB0cnVlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxyXG4gICAgICAgICAgICBsZWdlbmQ6IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJyaWdodFwiLFxyXG4gICAgICAgICAgICAgICAgbGFiZWxzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udENvbG9yOiAnIzU0RjBGRicsXHJcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxNCcsXHJcbiAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogJzIwcHgnLFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZVBvaW50U3R5bGU6dHJ1ZSxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2NhbGVzOiB7XHJcbiAgICAgICAgICAgICAgICB5QXhlczogW3tcclxuICAgICAgICAgICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzY2NzNCNFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhUaWNrc0xpbWl0OiA1LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRyYXdUaWNrczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZVdpZHRoOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJyZ2JhKDEwMiwgMTE1LCAxODAsIDAuMilcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgICAgIHhBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiBcIiNmZmZcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjNjY3M0I0XCJcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuLy8gRG91Z2hudXQgY2hhcnRcclxuXHJcbiAgLy9nZXQgdGhlIGRvdWdobnV0IGNoYXJ0IGNhbnZhc1xyXG4gIHZhciBjdHgxID0gJChcIiNkb3VnaG51dC1jaGFydGNhbnZhcy0xXCIpO1xyXG5cclxuICAvL2RvdWdobnV0IGNoYXJ0IGRhdGFcclxuICB2YXIgZGF0YTEgPSB7XHJcbiAgICBsYWJlbHM6IFtcIkZhY2UgZGV0ZWN0b3JcIiwgXCJFbW90aW9uIHJlY29nbml0aW9uXCJdLFxyXG4gICAgZGF0YXNldHM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGRhdGE6IFs4NSwgMTVdLFxyXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xyXG4gICAgICAgICAgXCIjNTRmMGZmXCIsXHJcbiAgICAgICAgICBcIiM4NTVkZjhcIlxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgYm9yZGVyQ29sb3I6IFtcclxuICAgICAgICAgIFwiIzU0ZjBmZlwiLFxyXG4gICAgICAgICAgXCIjODU1ZGY4XCJcclxuICAgICAgICBdXHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9O1xyXG5cclxuICAvL29wdGlvbnNcclxuICB2YXIgb3B0aW9ucyA9IHtcclxuICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICB0aXRsZToge1xyXG4gICAgICBkaXNwbGF5OiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGN1dG91dFBlcmNlbnRhZ2U6IDk4LFxyXG4gICAgbGVnZW5kOiB7XHJcbiAgICAgIGRpc3BsYXk6IGZhbHNlXHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy9jcmVhdGUgQ2hhcnQgY2xhc3Mgb2JqZWN0XHJcbiAgdmFyIGNoYXJ0MSA9IG5ldyBDaGFydChjdHgxLCB7XHJcbiAgICB0eXBlOiBcImRvdWdobnV0XCIsXHJcbiAgICBkYXRhOiBkYXRhMSxcclxuICAgIG9wdGlvbnM6IG9wdGlvbnNcclxuICB9KTtcclxuXHJcbi8vIE1pbmkgY2hhcnRcclxuICAgICAgdmFyIG1pbmlfdGltZSA9IFsnTWFyIDQnLDYsOCwxMCwxMiwxNCwxNiwxOCwyMCwyMiwyNCwyNiwyOCwzMCwnQXByIDEnLDMsNV07XHJcblxyXG4gICAgICB2YXIgbWluaV9mZCA9IFs1LDcsMSwyNCwxMywyOCw0MCwxNCwzOCwxMSwyMiwxNiwzNCwxOSwxLDE0LDM4LDExLDIyXTtcclxuICAgICAgdmFyIG1pbmlfZXIgPSBbMzgsMTEsMjIsMTYsMzQsMTksMSwxNCw1LDcsMSwyNCwxMywyOCw0MCwxNCw1LDcsMV07XHJcblxyXG4gICAgICB2YXIgYnR4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215Q2hhcnRNaW5pJykuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuICAgICAgdmFyIGdyYWRpZW50RmRfbWluaSA9IGJ0eC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAyNTApO1xyXG4gICAgICBncmFkaWVudEZkX21pbmkuYWRkQ29sb3JTdG9wKDAsICdyZ2JhKDEzMywgOTMsIDI0OCwgMC45KScpO1xyXG4gICAgICBncmFkaWVudEZkX21pbmkuYWRkQ29sb3JTdG9wKDEsICdyZ2JhKDYwLCA0NSwgMTY5LCAwLjkpJyk7XHJcblxyXG4gICAgICB2YXIgZ3JhZGllbnRFcl9taW5pID0gYnR4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDI1MCk7XHJcbiAgICAgIGdyYWRpZW50RXJfbWluaS5hZGRDb2xvclN0b3AoMCwgJ3JnYmEoODQsIDI0MCwgMjU1LCAwLjkpJyk7XHJcbiAgICAgIGdyYWRpZW50RXJfbWluaS5hZGRDb2xvclN0b3AoMSwgJ3JnYmEoMTgsIDEyNSwgMTc2LCAwLjkpJyk7XHJcblxyXG4gICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydChidHgsIHtcclxuICAgICAgICAgIHR5cGU6ICdsaW5lJyxcclxuICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICBsYWJlbHM6IG1pbmlfdGltZSxcclxuICAgICAgICAgICAgICBkYXRhc2V0czogW1xyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgbGFiZWw6IFwiRmRcIixcclxuICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGdyYWRpZW50RmRfbWluaSxcclxuICAgICAgICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDMsXHJcbiAgICAgICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgICAgICBmaWxsOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmRfbWluaSxcclxuICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgICAgIGRhdGE6IG1pbmlfZmQsXHJcbiAgICAgICAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiBcIkVyXCIsXHJcbiAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBncmFkaWVudEVyX21pbmksXHJcbiAgICAgICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgICAgICAgZmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBncmFkaWVudEVyX21pbmksXHJcbiAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICAgICAgICAgICAgICBkYXRhOiBtaW5pX2VyLFxyXG4gICAgICAgICAgICAgICAgICBsaW5lVGVuc2lvbjogMFxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgbGVnZW5kOiB7XHJcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgICAgICAgIGxhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgZm9udENvbG9yOiAnIzU0RjBGRicsXHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE0JyxcclxuICAgICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6ICcyMCdcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgc2NhbGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgIHlBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgICAgdGlja3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzY2NzNCNFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1heFRpY2tzTGltaXQ6IDUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRyYXdUaWNrczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmdiYSgxMDIsIDExNSwgMTgwLCAwLjIpXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgICAgICAgIHhBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgemVyb0xpbmVDb2xvcjogXCIjZmZmXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udENvbG9yOiBcIiM2NjczQjRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbi8vIFBheW1lbnRzIHRhYnNcclxuICAgIGZ1bmN0aW9uIHllYXIoZXZ0LCB5ZWFyKSB7XHJcbiAgICAgIHZhciBpLCB0YWJjb250ZW50LCB0YWJsaW5rcztcclxuICAgICAgdGFiY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJ0YWJjb250ZW50XCIpO1xyXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGFiY29udGVudC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHRhYmNvbnRlbnRbaV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICB9XHJcbiAgICAgIHRhYmxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInRhYmxpbmtzXCIpO1xyXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGFibGlua3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB0YWJsaW5rc1tpXS5jbGFzc05hbWUgPSB0YWJsaW5rc1tpXS5jbGFzc05hbWUucmVwbGFjZShcIiBhY3RpdmVcIiwgXCJcIik7XHJcbiAgICAgIH1cclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoeWVhcikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgZXZ0LmN1cnJlbnRUYXJnZXQuY2xhc3NOYW1lICs9IFwiIGFjdGl2ZVwiO1xyXG4gICAgfVxyXG5cclxuLy8gTW9kYWwgd2luZG93c1xyXG4gICQoJ1tkYXRhLWZhbmN5Ym94PVwiZ2FsbGVyeVwiXScpLmZhbmN5Ym94KHtcclxuXHJcbiAgfSk7XHJcblxyXG4vLyBBY2NvcmRpb25cclxuICAvLyBwYXltZW50cyBhY2NvcmRpb25cclxuICAgIHZhciBhY2MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYWNjb3JkaW9uXCIpO1xyXG4gICAgdmFyIGk7XHJcblxyXG4gICAgZm9yIChpID0gMDsgaSA8IGFjYy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBhY2NbaV0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcclxuICAgICAgICB2YXIgcGFuZWwgPSB0aGlzLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgICBpZiAocGFuZWwuc3R5bGUuZGlzcGxheSA9PT0gXCJ0YWJsZS1yb3dcIikge1xyXG4gICAgICAgICAgcGFuZWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBwYW5lbC5zdHlsZS5kaXNwbGF5ID0gXCJ0YWJsZS1yb3dcIjtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIC8vIGtleXMgYWNjb3JkaW9uXHJcbiAgICBmdW5jdGlvbiBrZXlzQWNjb3JkaW9uKCkge1xyXG4gICAgICAgIGlmKCQod2luZG93KS53aWR0aCgpIDwgNTYwKVxyXG4gICAgICAgIHsgICBcclxuICAgICAgICAgICB2YXIga2V5QWNjID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImtleXNcIik7IFxyXG4gICAgICAgICAgIHZhciBqOyBcclxuXHJcbiAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGtleUFjYy5sZW5ndGg7IGorKykgeyBcclxuICAgICAgICAgICAgIGtleUFjY1tqXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7IFxyXG4gICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xyXG5cclxuICAgICAgICAgICAgICAgdmFyIHBhbmVsID0gdGhpcy5uZXh0RWxlbWVudFNpYmxpbmc7XHJcblxyXG4gICAgICAgICAgICAgICB3aGlsZSAocGFuZWwpIHsgXHJcbiAgICAgICAgICAgICAgIGlmICghcGFuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdoaWRkZW4tYnV0dG9ucy1rZXlzJykpIHsgXHJcbiAgICAgICAgICAgICAgICAgYnJlYWs7IFxyXG4gICAgICAgICAgICAgICB9IFxyXG5cclxuICAgICAgICAgICAgICAgcGFuZWwuY2xhc3NMaXN0LnRvZ2dsZSgnZC1ub25lJyk7IFxyXG4gICAgICAgICAgICAgICBwYW5lbCA9IHBhbmVsLm5leHRFbGVtZW50U2libGluZzsgXHJcbiAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICB9KSBcclxuICAgICAgICAgICB9ICAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGtleXNBY2NvcmRpb24oKTtcclxuXHJcbiAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGtleXNBY2NvcmRpb24oKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbi8vIE1vYmlsZSBtZW51IGZpeGVkXHJcbiAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpe1xyXG4gICAgdmFyIHdTY3JvbGwgPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xyXG5cclxuICAgIGlmICh3U2Nyb2xsID4gOTApIHtcclxuICAgICAgJCgnLm1vYmlsZS1uYXYnKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgJCgnLm1vYmlsZS1uYXYnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICB9O1xyXG4gIH0pO1xyXG5cclxuLy8gTWVudSBkYXNoYm9hcmRcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1lbnVcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvcE1lbnUpO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWVudURlc2N0b3BcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvcE1lbnUpO1xyXG4gIGZ1bmN0aW9uIHRvcE1lbnUoKSB7XHJcbiAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudVwiKTtcclxuICAgIGlmICh4LnN0eWxlLmhlaWdodCA9PT0gXCJhdXRvXCIpIHtcclxuICAgICAgeC5zdHlsZS5oZWlnaHQgPSBcIjBcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHguc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuLy8gQ2hhcnQgbW9iaWxlIG1pbmlcclxuICB2YXIgdGltZSA9IFsnTWFyIDQnLDYsOCwxMCwxMiwxNCwxNiwxOCwyMCwyMiwyNCwyNiwyOCwzMCwnQXByIDEnLDMsNV07XHJcblxyXG4gIHZhciBmZCA9IFs1LDcsMSwyNCwxMywyOCw0MCwxNCwzOCwxMSwyMiwxNiwzNCwxOSwxLDE0LDM4LDExLDIyXTtcclxuICB2YXIgZXIgPSBbMzgsMTEsMjIsMTYsMzQsMTksMSwxNCw1LDcsMSwyNCwxMywyOCw0MCwxNCw1LDcsMV07XHJcblxyXG4gIHZhciBjdHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9iaWxlLWNoYXJ0JykuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuICB2YXIgZ3JhZGllbnRGZCA9IGN0eC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAyNTApO1xyXG4gIGdyYWRpZW50RmQuYWRkQ29sb3JTdG9wKDAsICdyZ2JhKDEzMywgOTMsIDI0OCwgMC45KScpO1xyXG4gIGdyYWRpZW50RmQuYWRkQ29sb3JTdG9wKDEsICdyZ2JhKDYwLCA0NSwgMTY5LCAwLjkpJyk7XHJcblxyXG4gIHZhciBncmFkaWVudEVyID0gY3R4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDI1MCk7XHJcbiAgZ3JhZGllbnRFci5hZGRDb2xvclN0b3AoMCwgJ3JnYmEoODQsIDI0MCwgMjU1LCAwLjkpJyk7XHJcbiAgZ3JhZGllbnRFci5hZGRDb2xvclN0b3AoMSwgJ3JnYmEoMTgsIDEyNSwgMTc2LCAwLjkpJyk7XHJcblxyXG4gIHZhciBteUNoYXJ0ID0gbmV3IENoYXJ0KGN0eCwge1xyXG4gICAgICB0eXBlOiAnbGluZScsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIGxhYmVsczogdGltZSxcclxuICAgICAgICAgIGRhdGFzZXRzOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IFwiRmFjZSBkZXRlY3RvclwiLFxyXG4gICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBncmFkaWVudEZkLFxyXG4gICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgICAgZmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmQsXHJcbiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgZGF0YTogZmQsXHJcbiAgICAgICAgICAgICAgbGluZVRlbnNpb246IDBcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IFwiRW1vdGlvbiByZWNvZ25pdGlvblwiLFxyXG4gICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBncmFkaWVudEVyLFxyXG4gICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgICAgZmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RXIsXHJcbiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgZGF0YTogZXIsXHJcbiAgICAgICAgICAgICAgbGluZVRlbnNpb246IDBcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIF1cclxuICAgICAgfSxcclxuICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxuICAgICAgICAgIHRvb2x0aXBzOiB7XHJcbiAgICAgICAgICAgICAgbW9kZTogJ2luZGV4JyxcclxuICAgICAgICAgICAgICBpbnRlcnNlY3Q6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMzAsIDM3LCA3MywgMC41KScsXHJcbiAgICAgICAgICAgICAgdGl0bGVGb250RmFtaWx5OiAnaW5oZXJpdCcsXHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgICAgICAgICAgICAgcG9zaXRpb246J25lYXJlc3QnLFxyXG4gICAgICAgICAgICAgIGJvZHlGb250Q29sb3I6ICcjYTliMmUxJyxcclxuICAgICAgICAgICAgICBib2R5Rm9udFNpemU6MTQsXHJcbiAgICAgICAgICAgICAgYm9keVNwYWNpbmc6MzAsXHJcbiAgICAgICAgICAgICAgeFBhZGRpbmc6MjAsXHJcbiAgICAgICAgICAgICAgeVBhZGRpbmc6MjUsXHJcbiAgICAgICAgICAgICAgY29ybmVyUmFkaXVzOjAsXHJcbiAgICAgICAgICAgICAgbXVsdGlLZXlCYWNrZ3JvdW5kOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWVcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcclxuICAgICAgICAgIGxlZ2VuZDoge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2VcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBzY2FsZXM6IHtcclxuICAgICAgICAgICAgICB5QXhlczogW3tcclxuICAgICAgICAgICAgICAgICAgdGlja3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aWNrTWFya0xlbmd0aDogMFxyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgIHhBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgdGlja01hcmtMZW5ndGg6IDBcclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgdGlja3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgIH1cclxuICAgICAgfVxyXG4gIH0pO1xyXG5cclxuLy8gQ2hhcnQgbW9iaWxlIGZ1bGxcclxuICB2YXIgdGltZSA9IFsnTWFyIDQnLDYsOCwxMCwxMiwxNCwxNiwxOCwyMCwyMiwyNCwyNiwyOCwzMCwnQXByIDEnLDMsNV07XHJcblxyXG4gIHZhciBmZCA9IFs1LDcsMSwyNCwxMywyOCw0MCwxNCwzOCwxMSwyMiwxNiwzNCwxOSwxLDE0LDM4LDExLDIyXTtcclxuICB2YXIgZXIgPSBbMzgsMTEsMjIsMTYsMzQsMTksMSwxNCw1LDcsMSwyNCwxMywyOCw0MCwxNCw1LDcsMV07XHJcblxyXG4gIHZhciBjdHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ3JhcGgtbW9iaWxlJykuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuICB2YXIgZ3JhZGllbnRGZCA9IGN0eC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAyNTApO1xyXG4gIGdyYWRpZW50RmQuYWRkQ29sb3JTdG9wKDAsICdyZ2JhKDEzMywgOTMsIDI0OCwgMC45KScpO1xyXG4gIGdyYWRpZW50RmQuYWRkQ29sb3JTdG9wKDEsICdyZ2JhKDYwLCA0NSwgMTY5LCAwLjkpJyk7XHJcblxyXG4gIHZhciBncmFkaWVudEVyID0gY3R4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDI1MCk7XHJcbiAgZ3JhZGllbnRFci5hZGRDb2xvclN0b3AoMCwgJ3JnYmEoODQsIDI0MCwgMjU1LCAwLjkpJyk7XHJcbiAgZ3JhZGllbnRFci5hZGRDb2xvclN0b3AoMSwgJ3JnYmEoMTgsIDEyNSwgMTc2LCAwLjkpJyk7XHJcblxyXG4gIHZhciBncmFwaF9tb2JpbGUgPSBuZXcgQ2hhcnQoY3R4LCB7XHJcbiAgICAgIHR5cGU6ICdsaW5lJyxcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgICAgbGFiZWxzOiB0aW1lLFxyXG4gICAgICAgICAgZGF0YXNldHM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBsYWJlbDogXCJGYWNlIGRldGVjdG9yXCIsXHJcbiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGdyYWRpZW50RmQsXHJcbiAgICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDMsXHJcbiAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgICBmaWxsOiBmYWxzZSxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmQsXHJcbiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDMsXHJcbiAgICAgICAgICAgICAgZGF0YTogZmQsXHJcbiAgICAgICAgICAgICAgbGluZVRlbnNpb246IDBcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IFwiRW1vdGlvbiByZWNvZ25pdGlvblwiLFxyXG4gICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBncmFkaWVudEVyLFxyXG4gICAgICAgICAgICAgIHBvaW50UmFkaXVzOiAzLFxyXG4gICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgICAgZmlsbDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBncmFkaWVudEVyLFxyXG4gICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAzLFxyXG4gICAgICAgICAgICAgIGRhdGE6IGVyLFxyXG4gICAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBdXHJcbiAgICAgIH0sXHJcbiAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgICB0b29sdGlwczoge1xyXG4gICAgICAgICAgICAgIG1vZGU6ICdpbmRleCcsXHJcbiAgICAgICAgICAgICAgaW50ZXJzZWN0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDMwLCAzNywgNzMsIDAuNSknLFxyXG4gICAgICAgICAgICAgIHRpdGxlRm9udEZhbWlseTogJ2luaGVyaXQnLFxyXG4gICAgICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxyXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiduZWFyZXN0JyxcclxuICAgICAgICAgICAgICBib2R5Rm9udENvbG9yOiAnI2E5YjJlMScsXHJcbiAgICAgICAgICAgICAgYm9keUZvbnRTaXplOjE0LFxyXG4gICAgICAgICAgICAgIGJvZHlTcGFjaW5nOjMwLFxyXG4gICAgICAgICAgICAgIHhQYWRkaW5nOjIwLFxyXG4gICAgICAgICAgICAgIHlQYWRkaW5nOjI1LFxyXG4gICAgICAgICAgICAgIGNvcm5lclJhZGl1czowLFxyXG4gICAgICAgICAgICAgIG11bHRpS2V5QmFja2dyb3VuZDogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgaG92ZXI6IHtcclxuICAgICAgICAgICAgICBtb2RlOiAnbmVhcmVzdCcsXHJcbiAgICAgICAgICAgICAgaW50ZXJzZWN0OiB0cnVlXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXHJcbiAgICAgICAgICBsZWdlbmQ6IHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OmZhbHNlLFxyXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgICAgbGFiZWxzOiB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogJyM1NEYwRkYnLFxyXG4gICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE0JyxcclxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogJzIwcHgnLFxyXG4gICAgICAgICAgICAgICAgICB1c2VQb2ludFN0eWxlOnRydWUsXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHNjYWxlczoge1xyXG4gICAgICAgICAgICAgIHlBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgZm9udENvbG9yOiBcIiM2NjczQjRcIixcclxuICAgICAgICAgICAgICAgICAgICAgIG1heFRpY2tzTGltaXQ6IDUsXHJcbiAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNCxcclxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGRyYXdUaWNrczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgIGxpbmVXaWR0aDogMSxcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInJnYmEoMTAyLCAxMTUsIDE4MCwgMC4yKVwiXHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgICAgeEF4ZXM6IFt7XHJcbiAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgemVyb0xpbmVDb2xvcjogXCIjZmZmXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOCxcclxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjNjY3M0I0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgIH1cclxuICAgICAgfVxyXG4gIH0pO1xyXG5cclxuLy8gTW9iaWxlIGRldGFpbCBidXR0b25cclxuICAkKCcjbW9iaWxlLWRhc2hib2FyZC1kZXRhaWwnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICQoJy5kYXNoYm9hcmQtaW5mbyAubWFpbi1pbmZvIC50YWJsZS13cmFwcGVyOm50aC1jaGlsZCgzKScpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7XHJcbiAgICAgICQoJy5kYXNoYm9hcmQtaW5mbyAubWFpbi1pbmZvIC50YWJsZS13cmFwcGVyOm50aC1jaGlsZCgyKScpLmNzcygnZGlzcGxheScsJ25vbmUnKTtcclxuICB9KTtcclxuXHJcbi8vIFZpc2libGUgY2hhbmdlIHBhc3N3b3JkXHJcbiAgJChcIi5jaGFuZ2VfcGFzcy1idG5cIikuY2xpY2soZnVuY3Rpb24oKXtcclxuICAgICQoXCIucGFzc3dvcmRcIikudG9nZ2xlQ2xhc3MoJ2QtYmxvY2snKTtcclxuICB9KTtcclxuXHJcbi8vIENoYW5nZSBiZyBuZWFyIGxvZ28gd2hlbiBkYXNoYm9hcmQgaXMgYWN0aXZlXHJcbiAgaWYgKCQoXCIuZGFzaGJvYXJkLWluZm8gLmRhc2hib2FyZF9sZWZ0LWJhciAubmF2IC5saXN0X2l0ZW06bnRoLWNoaWxkKDEpXCIpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgJCgnLmRhc2hib2FyZC1pbmZvIC5kYXNoYm9hcmRfbGVmdC1iYXInKS5jc3MoJ2JhY2tncm91bmQnLCd1cmwoLi4vaW1nL21ldGhvZC1kcmF3LWltYWdlLnN2Zyluby1yZXBlYXQnKTtcclxuICB9XHJcblxyXG4vLyBTaG93IGhpZGRlbiBwYXNzd29yZFxyXG4gICQoZnVuY3Rpb24oKXtcclxuICAgICQoJy5oaWRlLXNob3cnKS5zaG93KCk7XHJcbiAgICAkKCcuaGlkZS1zaG93IHNwYW4nKS5hZGRDbGFzcygnc2hvdycpO1xyXG4gICAgXHJcbiAgICAkKCcuaGlkZS1zaG93IHNwYW4nKS5jbGljayhmdW5jdGlvbigpe1xyXG4gICAgICBpZiggJCh0aGlzKS5oYXNDbGFzcygnc2hvdycpICkge1xyXG4gICAgICAgICQodGhpcykudGV4dCgnSGlkZScpO1xyXG4gICAgICAgICQodGhpcykucGFyZW50KCkuc2libGluZ3MoJy5wYXNzd29yZCcpLmF0dHIoJ3R5cGUnLCd0ZXh0Jyk7XHJcbiAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnc2hvdycpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAkKHRoaXMpLnRleHQoJ1Nob3cnKTtcclxuICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5zaWJsaW5ncygnLnBhc3N3b3JkJykuYXR0cigndHlwZScsJ3Bhc3N3b3JkJyk7XHJcbiAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ3Nob3cnKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgICQoJy5jaGFuZ2UgPiBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuICAgICAgJCgnLmhpZGUtc2hvdyBzcGFuJykudGV4dCgnU2hvdycpLmFkZENsYXNzKCdzaG93Jyk7XHJcbiAgICAgICQoJy5oaWRlLXNob3cnKS5wYXJlbnQoKS5maW5kKCcucGFzc3dvcmQnKS5hdHRyKCd0eXBlJywncGFzc3dvcmQnKTtcclxuICAgIH0pOyBcclxuICB9KTtcclxuXHJcbi8vIERldmVsb3BlZCBieSBuaWtvYWxkckBnbWFpbC5jb20gKDIwMTkpIl19
