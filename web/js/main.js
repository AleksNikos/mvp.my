function year(t,e){var a,i,r;for(i=document.getElementsByClassName("tabcontent"),a=0;a<i.length;a++)i[a].style.display="none";for(r=document.getElementsByClassName("tablinks"),a=0;a<r.length;a++)r[a].className=r[a].className.replace(" active","");document.getElementById(e).style.display="block",t.currentTarget.className+=" active"}new Chart(document.getElementById("bar-chart-horizontal"),{type:"horizontalBar",data:{labels:["Foo"],datasets:[{label:"bad",data:[25],backgroundColor:"#9eaeff"},{label:"better",data:[10],backgroundColor:"rgba(255, 255, 255, 0.3)"}]},options:{plugins:{stacked100:{enable:!0}},legend:{display:!1},scales:{xAxes:[{display:!1}],yAxes:[{display:!1}]}}});var time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],ctx=document.getElementById("myChart").getContext("2d"),gradientFd=ctx.createLinearGradient(0,0,0,250);gradientFd.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr=ctx.createLinearGradient(0,0,0,250);gradientEr.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr.addColorStop(1,"rgba(18, 125, 176, 0.9)");var myChart=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:fd,lineTension:0},{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0}]},options:{responsive:!0,tooltips:{mode:"index",intersect:!1,backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!0,intersect:!1},hover:{mode:"nearest",intersect:!0},maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20px",usePointStyle:!0}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)"}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4"}}]}}}),ctx1=$("#doughnut-chartcanvas-1"),data1={labels:["Face detector","Emotion recognition"],datasets:[{data:[85,15],backgroundColor:["#54f0ff","#855df8"],borderColor:["#54f0ff","#855df8"]}]},options={responsive:!0,title:{display:!1},cutoutPercentage:98,legend:{display:!1}},chart1=new Chart(ctx1,{type:"doughnut",data:data1,options:options}),mini_time=["Mar 4",6,8,10,12,14,16,18,20,22,24,26,28,30,"Apr 1",3,5],mini_fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,11,22],mini_er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,7,1],btx=document.getElementById("myChartMini").getContext("2d"),gradientFd_mini=btx.createLinearGradient(0,0,0,250);gradientFd_mini.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd_mini.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr_mini=btx.createLinearGradient(0,0,0,250);gradientEr_mini.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr_mini.addColorStop(1,"rgba(18, 125, 176, 0.9)");var myChart=new Chart(btx,{type:"line",data:{labels:mini_time,datasets:[{label:"Fd",borderColor:gradientFd_mini,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd_mini,borderWidth:1,data:mini_fd,lineTension:0},{label:"Er",borderColor:gradientEr_mini,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr_mini,borderWidth:1,data:mini_er,lineTension:0}]},options:{responsive:!0,maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20"}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14,display:!1},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)",display:!1}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4",display:!1}}]}}});$('[data-fancybox="gallery"]').fancybox({});var acc=document.getElementsByClassName("accordion"),i;for(i=0;i<acc.length;i++)acc[i].addEventListener("click",function(){this.classList.toggle("active");var t=this.nextElementSibling;"contents"===t.style.display?t.style.display="none":t.style.display="contents"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
